services:
    App\Bundle\FilmBundle\EventSubscriber\LocaleSubscriber:
      - class: App\Bundle\FilmBundle\EventSubscriber\LocaleSubscriber
      - arguments: ['%kernel.default_locale%']

    app.cacheservice:
      class: App\Bundle\FilmBundle\Service\CacheService
      arguments:
        $filecachepath: '%filecachepath%'

    app.service.deletecache:
      class: App\Bundle\FilmBundle\Service\CacheService
      arguments:
        $filecachepath: '%filecachepath%'
      tags:
        - { name: kernel.event_listener, event: deletecache }

    app.actor.repository:
        class: App\Bundle\FilmBundle\Actor\Repository\MySqlActorRepository
        public: false
        arguments:
          - "@doctrine.orm.default_entity_manager"

    app.actor.repository.cached:
        class: App\Bundle\FilmBundle\Actor\Repository\Decorator\CachedActorRepository
        public: false
        decorates: 'app.actor.repository'
        arguments:
          - '@app.actor.repository.cached.inner'
          - '@app.cacheservice'

    app.film.repository:
        class: App\Bundle\FilmBundle\Film\Repository\MySqlFilmRepository
        public: false
        arguments:
          - "@doctrine.orm.default_entity_manager"

    app.film.repository.cached:
      class: App\Bundle\FilmBundle\Film\Repository\Decorator\CachedFilmRepository
      public: false
      decorates: 'app.film.repository'
      arguments:
        - '@app.film.repository.cached.inner'
        - '@app.cacheservice'

    app.film.command_handler.read_by_id:
      class: App\Component\Film\Application\CommandHandler\Film\ReadFilmByIdHandler
      public: true
      arguments:
        - '@app.film.repository'

    app.film.command_handler.read_all:
      class: App\Component\Film\Application\CommandHandler\Film\ReadFilmAllHandler
      public: true
      arguments:
        - '@app.film.repository'

    app.film.command_handler.delete:
      class: App\Component\Film\Application\CommandHandler\Film\DeleteFilmHandler
      public: true
      arguments:
        - '@app.film.repository'

    app.film.command_handler.create:
      class: App\Component\Film\Application\CommandHandler\Film\CreateFilmHandler
      public: true
      arguments:
        - '@app.film.repository'
        - '@app.actor.repository'

    app.film.command_handler.update:
      class: App\Component\Film\Application\CommandHandler\Film\UpdateFilmHandler
      public: true
      arguments:
        - '@app.film.repository'
        - '@app.actor.repository'

    app.actor.command_handler.read_by_id:
      class: App\Component\Film\Application\CommandHandler\Actor\ReadActorByIdHandler
      public: true
      arguments:
        - '@app.actor.repository'

    app.actor.command_handler.read_all:
      class: App\Component\Film\Application\CommandHandler\Actor\ReadActorAllHandler
      public: true
      arguments:
        - '@app.actor.repository'

    app.actor.command_handler.create:
      class: App\Component\Film\Application\CommandHandler\Actor\CreateActorHandler
      public: true
      arguments:
        - '@app.actor.repository'

    app.actor.command_handler.update:
      class: App\Component\Film\Application\CommandHandler\Actor\UpdateActorHandler
      public: true
      arguments:
        - '@app.actor.repository'

    app.actor.command_handler.delete:
      class: App\Component\Film\Application\CommandHandler\Actor\DeleteActorHandler
      public: true
      arguments:
        - '@app.actor.repository'
